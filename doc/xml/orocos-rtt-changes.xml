<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
<!ENTITY orocos      "<acronym>Orocos</acronym>">
<!ENTITY oldversion  "2.3">
<!ENTITY version     "2.4">
]
>

<article>
  <articleinfo>
    <title>
      &orocos; Toolchain &version; Release Series
      Changes, New Features, and Fixes 
    </title>
    <subtitle>
			<emphasis>Open RObot COntrol Software</emphasis>
    </subtitle>
  </articleinfo>
  <para>
    This document provides a quick overview of what changed between
    the &orocos; Toolchain &oldversion; and version &version;.
  </para>
  <section id="upgrading">
    <title>Upgrading from RTT 1.x to Toolchain 2.x</title>
		<para>
			Please consult the online wiki for all available information about the 1.x to 2.x transition:
			<ulink url="http://www.orocos.org/wiki/rtt/rtt-20">The Road to RTT 2.0</ulink>.  The
			Real-Time Toolkit is no longer released as a single entity, but as part of a complete set of
			tools and libraries for creating real-time applications.  See also the changes documents of
			the previous major releases:
		 <itemizedlist>
			 <listitem><para><ulink url="http://www.orocos.org/stable/documentation/rtt/v2.0.x/doc-xml/orocos-rtt-changes.html">Toolchain 2.0 Changes</ulink></para></listitem>
			 <listitem><para><ulink url="http://www.orocos.org/stable/documentation/rtt/v2.1.x/doc-xml/orocos-rtt-changes.html">Toolchain 2.1 Changes</ulink></para></listitem>
			 <listitem><para><ulink url="http://www.orocos.org/stable/documentation/rtt/v2.2.x/doc-xml/orocos-rtt-changes.html">Toolchain 2.2 Changes</ulink></para></listitem>
			 <listitem><para><ulink url="http://www.orocos.org/stable/documentation/rtt/v2.3.x/doc-xml/orocos-rtt-changes.html">Toolchain 2.3 Changes</ulink></para></listitem>
		 </itemizedlist>
		</para>
	</section>
  <section id="caveats">
    <title>Caveats</title>
    <itemizedlist>
      <listitem>
				<para>
					This release is binary incompatible with RTT &oldversion;.x. You need to recompile the
					whole toolchain and all your applications in order to use this release.
				</para>
				<note><para>
					<emphasis>Take care that all previously built components and plugins in the lib/orocos directory and subdirectories
					are removed, since the deployment/plugin logic may want to load it. Especially on 'ROS' systems, which have
					such files in their lib/ directory.</emphasis>
				</para></note>
      </listitem>
      <listitem>
				<para>
					There are issues with plugin loading on the Mac OS-X platform which might have been fixed
					with this release. We invite Mac users to test the Orocos toolchain on their platform and
					to submit bug reports if some functionality does not work.
				</para>
      </listitem>
      <listitem>
				<para>
					We have confirmed reports of compilation time regressions when using GCC. We are looking into reducing them.
					You can speed-up compilation times of components by including the 'Types.hpp' files of the typekits you
					are using in data ports, properties or operations. For example:
					<programlisting>
  #include &lt;rtt/typekit/Types.hpp> // Speeds up compiling components using regular C types
  #include &lt;geometry_msgs/typekit/Types.hpp> // Speeds up compiling ROS geometry message types (depends on rtt_ros_integration_geometry_messages)
</programlisting>
				</para>
      </listitem>
		</itemizedlist>
		<section>
				<title>
					<emphasis>Changes in rtt/os/oro_atomic.h atomics headers</emphasis>
				</title>
				<para>
					The atomic operations have been refactored in order to suit future maintainability.
					The GCC-specific implementations have been rewritten in order to use the intrinsics.
					For this, the oro_atomic.h and oro_system.h headers were removed and a new header,
					oro_arch.h is in place for each target to implement the required atomics.
				</para>
		</section>
  </section>
  <section>
    <title>Improvements</title>
    <section>
      <title>Building</title>
      <itemizedlist>
      <listitem>
				<para>
					<emphasis>Building of executables on ROS systems using the UseOrocos cmake macros
					has been improved such that <command>rosrun</command> will no longer offer two options.
					If you upgrade OCL in-tree, In order to delete the old executables, use <command>git clean -xdf</command>
					and then rebuild.</emphasis>
				</para>
				<para>
				</para>
      </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>TaskContext and Services</title>
      <itemizedlist>
				<listitem>
					<para>
						The data flow port implementation has been optimized in order to reduce the number of copies to a
						minimum.
					</para>
				</listitem>
				<listitem>
					<para>
						There are fixes for the serialization of complex properties (structs and sequences) into the XML file format.
					</para>
				</listitem>
				<listitem>
					<para>
						A bug in the Signal implementation lead to a segfault when removing an event port from a TaskContext.
						This has been fixed.
					</para>
				</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Data Types, Toolkits and Typekits</title>
      <itemizedlist>
				<listitem>
					<para> The <classname>RTT::rt_string</classname> type has been added to the type system,
					allowing real-time string manipulations in scripts. It has the same featureset as the std string
					type, but uses the real-time memory allocators. You can create an rt_string as such:
					<programlisting>  var rt_string test = rt_string("Testit!") </programlisting>
					You can pass an rt_string where is a string is expected and the other way around. Creating
					the rt_string will always be hard real-time.
					</para>
				</listitem>
				<listitem>
					<para> The Posix MQueue transport for flow ports is now supported through orogen/typegen
					using a generic transport plugin. It relies on the type specific typelib transport, which is generated
					automatically when you use orogen/typegen. The traditional MQueue transport remains in place as well.
					</para>
				</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Operating Systems</title>
      <itemizedlist>
				<listitem>
					<para>
						It's now possible to set CPU Affinity when creating an activity or a thread. If your
						OS abstraction supports it, changing the affinity at run-time is possible too. Currently,
						this is only implemented for gnulinux targets. On other targets, setCPUAffinity() will have
						no effect, until their OS interface makes use of it.
					</para>
				</listitem>
				<listitem>
					<para>
						As of this version, Orocos will use the GCC intrinsics API in order to implement atomic
						operations on data, when GCC 4.1.0 or newer is available.
					</para>
				</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Orocos scripting</title>
      <itemizedlist>
				<listitem>
					<para>
						There were fixes in the parsing of the assignment operator. Especially the case a = b = c
						has now been fixed.
					</para>
				</listitem>
      </itemizedlist>
    </section>
  </section>
  <section>
    <title>Orocos Component Library (OCL)</title>
		<section>
			<title>Lua scripting</title>
			<itemizedlist>      
				<listitem>
					<para>
						Release 2.4.0 now has Lua 1.0-beta3, providing an as-good-as-stable API for creating
						and using components and applications. A <ulink
						url="http://www.orocos.org/wiki/orocos/toolchain/orocostoolchainluacookbook">LuaCookbook</ulink>
						has been put online which is updated regularly.
					</para>
				</listitem>
				<listitem>
					<para>
						You are now allowed to write:
						<programlisting>  tc:provides():setPeriod( 0.01 ) -- calls operation immediately </programlisting>
						instead of:
						<programlisting>  op = tc:provides():getOperation("setPeriod") -- 'getOperation syntax'
  op(0.01) -- calls 'setPeriod'</programlisting>
						Both forms for calling operations is supported. The former is convenient, but may be slower,
						the latter can be used in loops where the operation is first stored and then called with an
						argument later on.
					</para>
				</listitem>
			</itemizedlist>
		</section>
    <section>
      <title>Deployment</title>
      <itemizedlist>
				<listitem>
					<para>
						You can now kickOut any component, also if it was created using a script. A bug was fixed
						which did not shut down components which were not loaded using XML.
					</para>
				</listitem>
			</itemizedlist>
		</section>
    <section>
      <title>TaskBrowser</title>
      <itemizedlist>
				<listitem>
					<para>
						Allows to display all values in hex format using the .hex taskbrowser command.
					</para>
				</listitem>
				<listitem>
					<para>
						Tab-completion on services has been fixed. Properties did not show up.
					</para>
				</listitem>
			</itemizedlist>
		</section>
    <section>
      <title>Logging Service</title>
      <itemizedlist>
				<listitem>
					<para>
						A new logger for logging to Apache ChainSaw has been added, the
						<classname>OCL::logging::Log4cxxAppender</classname> component. You need ChainSaw running before
						your application starts in order to see the log events in the GUI. Any number of
						applications in your network may log to ChainSaw. For more details about logging in
						Orocos, see the <ulink
						url="http://www.orocos.org/wiki/rtt/rtt-20/real-time-logging/using-real-time-logging">
						LoggingService wiki page</ulink>.
					</para>
				</listitem>
			</itemizedlist>
		</section>
	</section>
	<appendix>
		<title>About Orocos</title>
		<para>
			Please send your Orocos questions to <ulink
			url="mailto: orocos-users at lists.mech.kuleuven.be">
			orocos-users at lists.mech.kuleuven.be </ulink>. 
		</para>
		<para>
			These pages are maintained by <ulink
			url="http://www.orocos.org/orocos/whatis">the Orocos
			team</ulink>.
		</para>
		<para>
			For questions related to the use of the Orocos Software, please consult these
			web pages and the <ulink
			url="http://www.orocos.org/rtt">Orocos RTT manuals</ulink>. If
			that fails, the  <ulink
			url="mailto:orocos-dev at lists.mech.kuleuven.be">
			orocos-dev at lists.mech.kuleuven.be </ulink> mailing list might help.
			Please
			send comments on these web pages and the development of Orocos to
			our developer mailing list at  <ulink
			url="mailto:orocos-dev at lists.mech.kuleuven.be">
			orocos-dev at lists.mech.kuleuven.be </ulink>. All of
			our lists have <ulink url="http://lists.mech.kuleuven.be/mailman/listinfo/orocos-users">public
			archives</ulink> ( <ulink url="http://lists.mech.kuleuven.be/mailman/listinfo/orocos-dev"> dev public
			archive</ulink> ) .
		</para>
		<para>
			Copyright (C) The SourceWorks
		</para>
		<para>
			Verbatim copying and distribution of this entire article is
			permitted in any medium, provided this notice is preserved.
		</para>
	</appendix>
</article>
