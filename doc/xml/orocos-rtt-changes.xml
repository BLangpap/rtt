<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
<!ENTITY orocos      "<acronym>Orocos</acronym>">
<!ENTITY oldversion  "2.2">
<!ENTITY version     "2.3">
]
>

<article>
  <articleinfo>
    <title>
      &orocos; Toolchain &version; Release Series
      Changes, New Features, and Fixes 
    </title>
    <subtitle>
			<emphasis>Open RObot COntrol Software</emphasis>
    </subtitle>
  </articleinfo>
  <para>
    This document provides a quick overview of what changed between
    the &orocos; Toolchain &oldversion; and version &version;.
  </para>
  <para>
    Please consult the online wiki for all available information about
    the 1.x to 2.x transition:
    <ulink
				url="http://www.orocos.org/wiki/rtt/rtt-20">The Road to RTT 2.0</ulink>.
    The Real-Time Toolkit is no longer released as a single entity, but as part
    of a complete set of tools and libraries for creating real-time applications.
    See also the changes documents of the previous major releases:
		 <itemizedlist>
			 <listitem><para><ulink url="http://www.orocos.org/stable/documentation/rtt/v2.0.x/doc-xml/orocos-rtt-changes.html">Toolchain 2.0 Changes</ulink></para></listitem>
			 <listitem><para><ulink url="http://www.orocos.org/stable/documentation/rtt/v2.1.x/doc-xml/orocos-rtt-changes.html">Toolchain 2.1 Changes</ulink></para></listitem>
			 <listitem><para><ulink url="http://www.orocos.org/stable/documentation/rtt/v2.2.x/doc-xml/orocos-rtt-changes.html">Toolchain 2.2 Changes</ulink></para></listitem>
		 </itemizedlist>
  </para>
  <section id="caveats">
    <title>Caveats</title>
    <itemizedlist>
      <listitem>
				<para>
					This release is binary incompatible with RTT &oldversion;.x. You need to recompile the
					whole toolchain and all your applications in order to use this release.
				</para>
				<para>
					Take care that all components and plugins in the lib/orocos directory and subdirectories
					are removed, since the deployment/plugin logic may want to load it.
				</para>
      </listitem>
      <listitem>
				<para>
					<emphasis>OCL installation directory has changed</emphasis>
				</para>
				<para>
					The Orocos Component Library (OCL) libraries are now installed in the <filename>lib/orocos/ocl</filename>
					directory instead of the 'top-level' <filename>lib/orocos</filename> directory. The OCL applications
					will still automatically import that directory, but if you have a custom deployment application
					and you rely on OCL, you'll need to add an import("ocl") statement in C++, scripting or your
					deployer XML file.
				</para>
      </listitem>
      <listitem>
				<para>
					<emphasis>Component/plugin/typekit installation directory has changed</emphasis>
				</para>
				<para>
					The Orocos components, typekits and libraries are now put in the
					<filename>lib/orocos/&lt;OROCOS_TARGET&gt;</filename> directory instead of the
					<filename>lib/orocos</filename> directory. This is so in order to allow multi-target
					installs of the same sources. Both the ROS builds ( in
					<filename>project/lib/orocos/&lt;OROCOS_TARGET&gt;</filename> ) and the non-ROS builds (
					in <filename>install/lib/orocos/&lt;OROCOS_TARGET&gt;/project</filename> ) have changed
					to this convention.
				</para>
      </listitem>
      <listitem>
				<para>
					<emphasis>UseOrocos-RTT.cmake macros links your libraries by using the manifest.xml file</emphasis>
				</para>
				<para>
					The Orocos CMake macro's now read your package's manifest.xml file to
					learn about dependencies. If a package you depend on provides a .pc file, 
					it will read that file and link every component, plugin or typekit of your package with the
					libraries listed in that .pc file. In order to disable this behavior, define
					the SET(OROCOS_NO_AUTO_LINKING TRUE) on top of your CMakeLists.txt file.
				</para>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Improvements</title>
    <section>
      <title>Documentation</title>
      <itemizedlist>
				<listitem>
					<para>
						The Orocos RTT cheat-sheet has been updated:
					</para>
					<para>
						<itemizedlist> 
							<listitem><para>RTT Cheat-Sheet v1.1 : C++, CMake, Deployment and TaskBrowser syntax.</para></listitem>
						</itemizedlist>
					</para>
				</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Building</title>
      <itemizedlist>
      <listitem>
				<para>
					<emphasis>New UseOrocos-RTT.cmake macro: orocos_generate_package()</emphasis>
				</para>
				<para>
					This new macro replaces your orocos_uninstall_target() and macros for generating and installing a .pc file.
					The .pc file is now automatically generated. Existing macros will keep working, but it's advised to
					gradually upgrade to the orocos_generate_package macro. This macro takes as optional arguments the
					package name and a version number. See the UseOrocos-RTT.cmake file for documentation.
				</para>
      </listitem>
				<listitem>
					<para>
						Building the Orocos Toolchain with <ulink url="http://clang.llvm.org/">Clang is now supported</ulink>, but you will need the latest
						Clang version from SVN/Git, which will become Clang version 2.9. We noted a compilation
						time improvement with 35% and a substatial reduction in required memory during
						compilation, all in comparison with GCC 4.4.
					</para>
				</listitem>
				<listitem>
					<para>
						We support bootstrapping (using the bootstrap.sh script) of the RTT packages in a ROS environment.
						You must however run the <filename>bootstrap.sh</filename> script in a (sub-)directory of your ROS_PACKAGE_PATH.
					</para>
				</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>TaskContext and Services</title>
      <itemizedlist>
				<listitem>
					<para>
						<function>addProperty("name", property)</function> will detect if 'property' is a plain C/C++ 
						member variable, or an <classname>RTT::Property</classname> object. This will avoid some errors
						newbies have with accidentally adding a Property-within-a-Property object.
					</para>
				</listitem>
				<listitem>
					<para>
						The property reading and writing functions have been rewritten in order to better/faster handle composition
						and decomposition of composite properties.
					</para>
				</listitem>
				<listitem>
					<para>
						
					</para>
				</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Data Types, Toolkits and Typekits</title>
      <itemizedlist>
				<listitem>
					<para>
						When the same C++ type is present in multiple typekits, an alias will be created,
						such that you can keep using both types. However, when asking the type info object
						the typename, only one of these will be returned. In order to check if a type info
						object matches a user-provided name, use <function>Types()->type("thename") == type_info</function>
						instead of <function>"thename" == type_info->getTypeName()</function>.
					</para>
				</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Operating Systems</title>
      <itemizedlist>
				<listitem>
					<para>
						Many patches went in to support Win32 builds 'out-of-the-box'. We'd be glad to be informed about the
						your success or failures with compiling the Toolchain on Windows.
					</para>
				</listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Orocos scripting</title>
      <itemizedlist>
				<listitem>
					<para>
						The + and - operators did not respect order and were evaluated from right to left,
						instead of left-to-right. This has been fixed.
					</para>
				</listitem>
      </itemizedlist>
    </section>
  </section>
  <section>
    <title>Orocos Component Library (OCL)</title>
		<section>
			<title>Lua scripting</title>
			<itemizedlist>      
				<listitem>
					<para>
						The Lua Syntax has been greatly unified in order to have more readable and
						more consistent code. Also the documentation is now generated with the Toolchain.
					</para>
				</listitem>
			</itemizedlist>
		</section>
    <section>
      <title>Deployment</title>
      <itemizedlist>
				<listitem>
					<para>
						In ROS systems, the deployer will only load components and plugins from the
						<filename>package/lib/orocos/OROCOS_TARGET</filename> directory <emphasis>if it
						exists</emphasis>, and ignore any libraries in the <filename>package/lib/orocos</filename>
						directory.
					</para>
				</listitem>
				<listitem>
					<para>
						See the Caveats section on top for the change of the installation directory
						of OCL components.
					</para>
				</listitem>
			</itemizedlist>
		</section>
    <section>
      <title>TaskBrowser</title>
      <itemizedlist>
				<listitem>
					<para>
						Displaying the values of output ports is now more consistent and reflects what
						the user expects. It returns the 'last()' value of the port.
					</para>
				</listitem>
				<listitem>
					<para>
						The TaskBrowser history no longer stores two consecutive duplicate commands.
					</para>
				</listitem>
				<listitem>
					<para>
						The TaskBrowser can now provide 'help' for sub-services. For example:
						<programlisting>Deployer [S]> <emphasis>help myservice.port</emphasis>

Printing Interface of 'port' :

 connected( ) : bool
   Check if this port is connected and ready for use.
 disconnect( ) : void
   Disconnects this port from any connection it is part of.
 name( ) : /std/string const&amp; const&amp;
   Returns the port name.
 read( double &amp; sample ) : FlowStatus
   Reads a sample from the port.
   sample :
Deployer [S]> <emphasis>help myservice.port.connected</emphasis>

 connected( ) : bool
   Check if this port is connected and ready for use.
</programlisting>
					</para>
				</listitem>
			</itemizedlist>
		</section>
		<section>
			<title>Real-Time Logging Service</title>
			<itemizedlist>      
				<listitem>
					<para>
						The logging service is now built by default using CMake (which also
						builds on Win32 and Mac OS-X platforms), but the old
						configure scripts are still in place in case you would need to fall
						back on them.
					</para>
				</listitem>
			</itemizedlist>
		</section>
	</section>
	<appendix>
		<title>About Orocos</title>
		<para>
			Please send your Orocos questions to <ulink
			url="mailto: orocos-users at lists.mech.kuleuven.be">
			orocos-users at lists.mech.kuleuven.be </ulink>. 
		</para>
		<para>
			These pages are maintained by <ulink
			url="http://www.orocos.org/orocos/whatis">the Orocos
			team</ulink>.
		</para>
		<para>
			For questions related to the use of the Orocos Software, please consult these
			web pages and the <ulink
			url="http://www.orocos.org/rtt">Orocos RTT manuals</ulink>. If
			that fails, the  <ulink
			url="mailto:orocos-dev at lists.mech.kuleuven.be">
			orocos-dev at lists.mech.kuleuven.be </ulink> mailing list might help.
			Please
			send comments on these web pages and the development of Orocos to
			our developer mailing list at  <ulink
			url="mailto:orocos-dev at lists.mech.kuleuven.be">
			orocos-dev at lists.mech.kuleuven.be </ulink>. All of
			our lists have <ulink url="http://lists.mech.kuleuven.be/mailman/listinfo/orocos-users">public
			archives</ulink> ( <ulink url="http://lists.mech.kuleuven.be/mailman/listinfo/orocos-dev"> dev public
			archive</ulink> ) .
		</para>
		<para>
			Copyright (C) The SourceWorks
		</para>
		<para>
			Verbatim copying and distribution of this entire article is
			permitted in any medium, provided this notice is preserved.
		</para>
	</appendix>
</article>
