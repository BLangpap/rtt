// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from 
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:1196

#include "TaskContextI.h"

// Implementation skeleton constructor
RTT_corba_CTaskContext_i::RTT_corba_CTaskContext_i (void)
{
}

// Implementation skeleton destructor
RTT_corba_CTaskContext_i::~RTT_corba_CTaskContext_i (void)
{
}

::RTT::corba::CTaskState RTT_corba_CTaskContext_i::getTaskState (
    void)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::configure (
    void)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::start (
    void)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::activate (
    void)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::stop (
    void)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::cleanup (
    void)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::isActive (
    void)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::isRunning (
    void)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::isConfigured (
    void)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::inFatalError (
    void)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::inRunTimeError (
    void)
{
  // Add your implementation here
}

::RTT::corba::CDataFlowInterface_ptr RTT_corba_CTaskContext_i::ports (
    void)
{
  // Add your implementation here
}

::RTT::corba::CServiceProvider_ptr RTT_corba_CTaskContext_i::providesService (
    const char * service_name)
{
  // Add your implementation here
}

::RTT::corba::CServiceRequester_ptr RTT_corba_CTaskContext_i::requiresService (
    const char * service_name)
{
  // Add your implementation here
}

::RTT::corba::CTaskContext::CTaskContextNames * RTT_corba_CTaskContext_i::getPeerList (
    void)
{
  // Add your implementation here
}

::RTT::corba::CTaskContext_ptr RTT_corba_CTaskContext_i::getPeer (
    const char * name)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::hasPeer (
    const char * name)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::addPeer (
    ::RTT::corba::CTaskContext_ptr p,
    const char * alias)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::removePeer (
    const char * name)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::connectPeers (
    ::RTT::corba::CTaskContext_ptr p)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::disconnectPeers (
    const char * name)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::connectPorts (
    ::RTT::corba::CTaskContext_ptr p)
{
  // Add your implementation here
}

::CORBA::Boolean RTT_corba_CTaskContext_i::connectServices (
    ::RTT::corba::CTaskContext_ptr p)
{
  // Add your implementation here
}


