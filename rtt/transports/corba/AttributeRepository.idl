#ifndef ORO_CORBA_ATTRIBUTE_REPOSISTORY_IDL
#define ORO_CORBA_ATTRIBUTE_REPOSISTORY_IDL

#ifdef CORBA_IS_TAO
//resolves LNK2005
#include <tao/orb.idl>
#endif

module RTT
{
    module corba
    {
	/**
	 * Exposes both attributes and properties
	 * of a service.
	 * @ingroup CompIDL
	 */
	interface CAttributeRepository
	{
	    struct CProperty {
		  string name;
		  string description;
	    };

	    typedef sequence<CProperty> CPropertyNames;
	    typedef sequence<string> CAttributeNames;

	    CAttributeNames getAttributeList();

	    CPropertyNames  getPropertyList();

	    any getAttribute( in string name );

	    boolean setAttribute( in string name, in any value );

	    /**
	     * Get a property by name. You can scope the name for
	     * entering sub-properties. For example 'controlparameters.gains.k'
	     * to retrieve nested property with name 'k'.
	     */
	    any getProperty( in string name );

	    /**
	     * Set a property by name. You can scope the name for
	     * entering sub-properties. For example 'controlparameters.gains.k'
	     * to write nested property with name 'k'.
	     */
	    boolean setProperty( in string name, in any value );

	    /**
	     * Return the type of the attribute or property.
	     */
	    string getType(in string name);

	    /**
	     * Return the type name of the expression as it is known
	     * to the Orocos Type System.
	     */
	    string getTypeName(in string name);

	    /**
	     * Return the result of an attribute or property as a text string.
	     */
	    string toString(in string name);
	};
    };
};


#endif

