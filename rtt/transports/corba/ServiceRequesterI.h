// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from 
// ../../../ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:1133

#ifndef ORO_CORBA_SERVICEREQUESTERI_H_
#define ORO_CORBA_SERVICEREQUESTERI_H_

#include "corba.h"
#ifdef CORBA_IS_TAO
#include "ServiceRequesterS.h"
#else
#include "ServiceRequesterC.h"
#endif

#include "../../interface/ServiceRequester.hpp"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
#pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

class  RTT_corba_CServiceRequester_i
    : public virtual POA_RTT::corba::CServiceRequester, public virtual PortableServer::RefCountServantBase
{
protected:
    RTT::interface::ServiceRequester* mservice;
    PortableServer::POA_ptr mpoa;
public:
  // Constructor 
    RTT_corba_CServiceRequester_i (RTT::interface::ServiceRequester* service, PortableServer::POA_ptr poa);
  
  // Destructor 
  virtual ~RTT_corba_CServiceRequester_i (void);
  
  virtual RTT::corba::CServiceRequester_ptr activate_this() {
      PortableServer::ObjectId_var oid = mpoa->activate_object(this); // ref count=2
      //_remove_ref(); // ref count=1
      return _this();
  }

  virtual
  char * getRequestName (
      void);
  
  virtual
  ::RTT::corba::CRequestNames * getRequestNames (
      void);
  
  virtual
  ::RTT::corba::CMethodNames * getMethodNames (
      void);
  
  virtual
  ::RTT::corba::CServiceRequester_ptr getRequest (
      const char * name);
  
  virtual
  ::CORBA::Boolean hasRequest (
      const char * name);
  
  virtual
  ::CORBA::Boolean connectTo (
      ::RTT::corba::CServiceProvider_ptr svc);
  
  virtual
  ::CORBA::Boolean ready (
      void);
  
  virtual
  void disconnect (
      void);
};


#endif /* SERVICEREQUESTERI_H_  */

